diff --git a/release/scripts/startup/bl_ui/properties_render.py b/release/scripts/startup/bl_ui/properties_render.py
index 34a21b76143..be6c651e86f 100644
--- a/release/scripts/startup/bl_ui/properties_render.py
+++ b/release/scripts/startup/bl_ui/properties_render.py
@@ -590,6 +590,38 @@ class RENDER_PT_eevee_depth_of_field(RenderButtonsPanel, Panel):
         col.prop(props, "bokeh_max_size")
         col.prop(props, "bokeh_threshold")
 
+class RENDER_PT_eevee_sobel(RenderButtonsPanel, Panel):
+    bl_label = "Sobel"
+    bl_options = {'DEFAULT_CLOSED'}
+    COMPAT_ENGINES = {'BLENDER_EEVEE'}
+
+    @classmethod
+    def poll(cls, context):
+        return (context.engine in cls.COMPAT_ENGINES)
+
+    def draw_header(self, context):
+        scene = context.scene
+        props = scene.eevee
+        self.layout.prop(props, "use_sobel", text="")
+
+    def draw(self, context):
+        layout = self.layout
+        layout.use_property_split = True
+        scene = context.scene
+        props = scene.eevee
+
+        layout.active = props.use_sobel
+        col = layout.column()
+        col.prop(props, "sobel_normal_threshold")
+        col.prop(props, "sobel_normal_strength")
+        col.prop(props, "sobel_normal_depth_decay")
+        col.separator()
+        col.prop(props, "sobel_depth_threshold")
+        col.prop(props, "sobel_depth_strength")
+        col.separator()
+        col.prop(props, "sobel_line_thickness")
+        col.prop(props, "sobel_line_color")
+
 
 class RENDER_PT_eevee_bloom(RenderButtonsPanel, Panel):
     bl_label = "Bloom"
@@ -952,6 +984,7 @@ classes = (
     RENDER_PT_eevee_volumetric,
     RENDER_PT_eevee_motion_blur,
     RENDER_PT_eevee_depth_of_field,
+    RENDER_PT_eevee_sobel,
     RENDER_PT_eevee_bloom,
     RENDER_PT_opengl_film,
     RENDER_PT_opengl_lighting,
diff --git a/source/blender/blenkernel/intern/scene.c b/source/blender/blenkernel/intern/scene.c
index 44406714771..0d178cb0a21 100644
--- a/source/blender/blenkernel/intern/scene.c
+++ b/source/blender/blenkernel/intern/scene.c
@@ -899,6 +899,14 @@ void BKE_scene_init(Scene *sce)
 	sce->eevee.bokeh_max_size = 100.0f;
 	sce->eevee.bokeh_threshold = 1.0f;
 
+	sce->eevee.sobel_normal_threshold = 0.5f;
+	sce->eevee.sobel_normal_strength = 1.0f;
+	sce->eevee.sobel_normal_depth_decay = 10.0f;
+	sce->eevee.sobel_depth_threshold = 0.5f;
+	sce->eevee.sobel_depth_strength = 1.0f;
+	sce->eevee.sobel_line_thickness = 1.0f;
+	copy_v3_fl(sce->eevee.bloom_color, 0.0f);
+
 	copy_v3_fl(sce->eevee.bloom_color, 1.0f);
 	sce->eevee.bloom_threshold = 0.8f;
 	sce->eevee.bloom_knee = 0.5f;
diff --git a/source/blender/blenloader/intern/versioning_280.c b/source/blender/blenloader/intern/versioning_280.c
index ab52a9b8b8f..ea760c41a21 100644
--- a/source/blender/blenloader/intern/versioning_280.c
+++ b/source/blender/blenloader/intern/versioning_280.c
@@ -1434,6 +1434,14 @@ void blo_do_versions_280(FileData *fd, Library *UNUSED(lib), Main *bmain)
 				scene->eevee.bokeh_max_size = 100.0f;
 				scene->eevee.bokeh_threshold = 1.0f;
 
+				scene->eevee.sobel_normal_threshold = 0.5f;
+				scene->eevee.sobel_normal_strength = 1.0f;
+				scene->eevee.sobel_normal_depth_decay = 10.0f;
+				scene->eevee.sobel_depth_threshold = 0.5f;
+				scene->eevee.sobel_depth_strength = 1.0f;
+				scene->eevee.sobel_line_thickness = 1.0f;
+				copy_v3_fl(scene->eevee.sobel_line_color, 0.0f);
+
 				copy_v3_fl(scene->eevee.bloom_color, 1.0f);
 				scene->eevee.bloom_threshold = 0.8f;
 				scene->eevee.bloom_knee = 0.5f;
@@ -1511,6 +1519,7 @@ void blo_do_versions_280(FileData *fd, Library *UNUSED(lib), Main *bmain)
 				EEVEE_GET_BOOL(props, gtao_use_bent_normals, SCE_EEVEE_GTAO_BENT_NORMALS);
 				EEVEE_GET_BOOL(props, gtao_bounce, SCE_EEVEE_GTAO_BOUNCE);
 				EEVEE_GET_BOOL(props, dof_enable, SCE_EEVEE_DOF_ENABLED);
+				EEVEE_GET_BOOL(props, sobel_enable, SCE_EEVEE_SOBEL_ENABLED);
 				EEVEE_GET_BOOL(props, bloom_enable, SCE_EEVEE_BLOOM_ENABLED);
 				EEVEE_GET_BOOL(props, motion_blur_enable, SCE_EEVEE_MOTION_BLUR_ENABLED);
 				EEVEE_GET_BOOL(props, shadow_high_bitdepth, SCE_EEVEE_SHADOW_HIGH_BITDEPTH);
@@ -1553,6 +1562,8 @@ void blo_do_versions_280(FileData *fd, Library *UNUSED(lib), Main *bmain)
 				EEVEE_GET_FLOAT(props, bokeh_max_size);
 				EEVEE_GET_FLOAT(props, bokeh_threshold);
 
+				EEVEE_GET_FLOAT(props, sobel_depth_threshold)
+
 				EEVEE_GET_FLOAT_ARRAY(props, bloom_color, 3);
 				EEVEE_GET_FLOAT(props, bloom_threshold);
 				EEVEE_GET_FLOAT(props, bloom_knee);
diff --git a/source/blender/draw/CMakeLists.txt b/source/blender/draw/CMakeLists.txt
index 4f9a90ba4f0..05d152a312e 100644
--- a/source/blender/draw/CMakeLists.txt
+++ b/source/blender/draw/CMakeLists.txt
@@ -93,6 +93,7 @@ set(SRC
 	engines/eevee/eevee_bloom.c
 	engines/eevee/eevee_data.c
 	engines/eevee/eevee_depth_of_field.c
+	engines/eevee/eevee_sobel.c
 	engines/eevee/eevee_effects.c
 	engines/eevee/eevee_engine.c
 	engines/eevee/eevee_lightcache.c
@@ -179,6 +180,7 @@ data_to_c_simple(engines/eevee/shaders/lit_surface_vert.glsl SRC)
 data_to_c_simple(engines/eevee/shaders/effect_bloom_frag.glsl SRC)
 data_to_c_simple(engines/eevee/shaders/effect_dof_vert.glsl SRC)
 data_to_c_simple(engines/eevee/shaders/effect_dof_frag.glsl SRC)
+data_to_c_simple(engines/eevee/shaders/effect_sobel_frag.glsl SRC)
 data_to_c_simple(engines/eevee/shaders/effect_downsample_frag.glsl SRC)
 data_to_c_simple(engines/eevee/shaders/effect_downsample_cube_frag.glsl SRC)
 data_to_c_simple(engines/eevee/shaders/effect_gtao_frag.glsl SRC)
diff --git a/source/blender/draw/engines/eevee/eevee_effects.c b/source/blender/draw/engines/eevee/eevee_effects.c
index fe71558f74a..14ba003a2f2 100644
--- a/source/blender/draw/engines/eevee/eevee_effects.c
+++ b/source/blender/draw/engines/eevee/eevee_effects.c
@@ -174,6 +174,7 @@ void EEVEE_effects_init(EEVEE_ViewLayerData *sldata, EEVEE_Data *vedata, Object
 	effects->enabled_effects |= EEVEE_motion_blur_init(sldata, vedata, camera);
 	effects->enabled_effects |= EEVEE_bloom_init(sldata, vedata);
 	effects->enabled_effects |= EEVEE_depth_of_field_init(sldata, vedata, camera);
+	effects->enabled_effects |= EEVEE_sobel_init(sldata, vedata, camera);
 	effects->enabled_effects |= EEVEE_temporal_sampling_init(sldata, vedata);
 	effects->enabled_effects |= EEVEE_occlusion_init(sldata, vedata);
 	effects->enabled_effects |= EEVEE_subsurface_init(sldata, vedata);
@@ -529,6 +530,7 @@ void EEVEE_draw_effects(EEVEE_ViewLayerData *UNUSED(sldata), EEVEE_Data *vedata)
 	effects->target_buffer = fbl->effect_color_fb; /* next target to render to */
 
 	/* Post process stack (order matters) */
+	EEVEE_sobel_draw(vedata);
 	EEVEE_motion_blur_draw(vedata);
 	EEVEE_depth_of_field_draw(vedata);
 	EEVEE_temporal_sampling_draw(vedata);
diff --git a/source/blender/draw/engines/eevee/eevee_engine.c b/source/blender/draw/engines/eevee/eevee_engine.c
index bea7d000181..3dd6270604c 100644
--- a/source/blender/draw/engines/eevee/eevee_engine.c
+++ b/source/blender/draw/engines/eevee/eevee_engine.c
@@ -113,6 +113,7 @@ static void eevee_cache_init(void *vedata)
 
 	EEVEE_bloom_cache_init(sldata, vedata);
 	EEVEE_depth_of_field_cache_init(sldata, vedata);
+	EEVEE_sobel_cache_init(sldata, vedata);
 	EEVEE_effects_cache_init(sldata, vedata);
 	EEVEE_lightprobes_cache_init(sldata, vedata);
 	EEVEE_lights_cache_init(sldata, vedata);
diff --git a/source/blender/draw/engines/eevee/eevee_private.h b/source/blender/draw/engines/eevee/eevee_private.h
index 35a1211ba4a..57f0d6cd09e 100644
--- a/source/blender/draw/engines/eevee/eevee_private.h
+++ b/source/blender/draw/engines/eevee/eevee_private.h
@@ -219,6 +219,7 @@ typedef struct EEVEE_PassList {
 	struct DRWPass *dof_down;
 	struct DRWPass *dof_scatter;
 	struct DRWPass *dof_resolve;
+	struct DRWPass *sobel;
 	struct DRWPass *volumetric_world_ps;
 	struct DRWPass *volumetric_objects_ps;
 	struct DRWPass *volumetric_scatter_ps;
@@ -520,6 +521,7 @@ typedef enum EEVEE_EffectsFlag {
 	EFFECT_VELOCITY_BUFFER     = (1 << 12), /* Not really an effect but a feature */
 	EFFECT_TAA_REPROJECT       = (1 << 13), /* should be mutually exclusive with EFFECT_TAA */
 	EFFECT_DEPTH_DOUBLE_BUFFER = (1 << 14), /* Not really an effect but a feature */
+	EFFECT_SOBEL			   = (1 << 15),
 } EEVEE_EffectsFlag;
 
 typedef struct EEVEE_EffectsInfo {
@@ -578,6 +580,17 @@ typedef struct EEVEE_EffectsInfo {
 	struct GPUTexture *dof_down_far;
 	struct GPUTexture *dof_coc;
 	struct GPUTexture *dof_blur;
+	/* Sobel */
+	float uniform_texel_size[2];
+	float clip_start;
+	float clip_end;
+	float sobel_normal_threshold;
+	float sobel_normal_strength;
+	float sobel_normal_depth_decay;
+	float sobel_depth_threshold;
+	float sobel_depth_strength;
+	float sobel_line_thickness;
+	float sobel_line_color[3];
 	/* Other */
 	float prev_persmat[4][4];
 	/* Bloom */
@@ -892,6 +905,12 @@ void EEVEE_depth_of_field_cache_init(EEVEE_ViewLayerData *sldata, EEVEE_Data *ve
 void EEVEE_depth_of_field_draw(EEVEE_Data *vedata);
 void EEVEE_depth_of_field_free(void);
 
+/* eevee_sobel.c */
+int EEVEE_sobel_init(EEVEE_ViewLayerData *sldata, EEVEE_Data *vedata, Object *camera);
+void EEVEE_sobel_cache_init(EEVEE_ViewLayerData *sldata, EEVEE_Data *vedata);
+void EEVEE_sobel_draw(EEVEE_Data *vedata);
+void EEVEE_sobel_free(void);
+
 /* eevee_bloom.c */
 int EEVEE_bloom_init(EEVEE_ViewLayerData *sldata, EEVEE_Data *vedata);
 void EEVEE_bloom_cache_init(EEVEE_ViewLayerData *sldata, EEVEE_Data *vedata);
diff --git a/source/blender/draw/engines/eevee/eevee_render.c b/source/blender/draw/engines/eevee/eevee_render.c
index 000649f42ac..d8f8a334a56 100644
--- a/source/blender/draw/engines/eevee/eevee_render.c
+++ b/source/blender/draw/engines/eevee/eevee_render.c
@@ -122,6 +122,7 @@ void EEVEE_render_init(EEVEE_Data *ved, RenderEngine *engine, struct Depsgraph *
 	/* INIT CACHE */
 	EEVEE_bloom_cache_init(sldata, vedata);
 	EEVEE_depth_of_field_cache_init(sldata, vedata);
+	EEVEE_sobel_cache_init(sldata, vedata);
 	EEVEE_effects_cache_init(sldata, vedata);
 	EEVEE_lightprobes_cache_init(sldata, vedata);
 	EEVEE_lights_cache_init(sldata, vedata);
 
diff --git a/source/blender/makesdna/DNA_scene_types.h b/source/blender/makesdna/DNA_scene_types.h
index 15e8f950686..b77bbb6d795 100644
--- a/source/blender/makesdna/DNA_scene_types.h
+++ b/source/blender/makesdna/DNA_scene_types.h
@@ -1469,6 +1469,14 @@ typedef struct SceneEEVEE {
 	float bokeh_max_size;
 	float bokeh_threshold;
 
+	float sobel_normal_threshold;
+	float sobel_normal_strength;
+	float sobel_normal_depth_decay;
+	float sobel_depth_threshold;
+	float sobel_depth_strength;
+	float sobel_line_thickness;
+	float sobel_line_color[3];
+
 	float bloom_color[3];
 	float bloom_threshold;
 	float bloom_knee;
@@ -1483,6 +1491,8 @@ typedef struct SceneEEVEE {
 	int shadow_cube_size;
 	int shadow_cascade_size;
 
+	char padding[4];
+
 	struct LightCache *light_cache;
 	char light_cache_info[64];
 } SceneEEVEE;
@@ -2193,6 +2203,7 @@ enum {
 	SCE_EEVEE_SHOW_IRRADIANCE		= (1 << 17),
 	SCE_EEVEE_SHOW_CUBEMAPS			= (1 << 18),
 	SCE_EEVEE_GI_AUTOBAKE			= (1 << 19),
+	SCE_EEVEE_SOBEL_ENABLED			= (1 << 20),
 };
 
 /* SceneEEVEE->shadow_method */
diff --git a/source/blender/makesrna/intern/rna_scene.c b/source/blender/makesrna/intern/rna_scene.c
index 199f74c709d..5231c0079bb 100644
--- a/source/blender/makesrna/intern/rna_scene.c
+++ b/source/blender/makesrna/intern/rna_scene.c
@@ -4003,7 +4003,6 @@ static void rna_def_gpu_fx(BlenderRNA *brna)
 	                         "Use depth of field on viewport using the values from active camera");
 	RNA_def_property_update(prop, NC_SPACE | ND_SPACE_VIEW3D, NULL);
 
-
 	prop = RNA_def_property(srna, "ssao", PROP_POINTER, PROP_NONE);
 	RNA_def_property_flag(prop, PROP_NEVER_NULL);
 	RNA_def_property_struct_type(prop, "GPUSSAOSettings");
@@ -5928,6 +5927,56 @@ static void rna_def_scene_eevee(BlenderRNA *brna)
 	RNA_def_property_ui_range(prop, 0.0f, 10.0f, 1, 3);
 	RNA_def_property_override_flag(prop, PROPOVERRIDE_OVERRIDABLE_STATIC);
 
+	/* Sobel */
+	prop = RNA_def_property(srna, "use_sobel", PROP_BOOLEAN, PROP_NONE);
+	RNA_def_property_boolean_sdna(prop, NULL, "flag", SCE_EEVEE_SOBEL_ENABLED);
+	RNA_def_property_boolean_default(prop, 0);
+	RNA_def_property_ui_text(prop, "Sobel", "Enable sobel line rendering using depth and normal information");
+	RNA_def_property_override_flag(prop, PROPOVERRIDE_OVERRIDABLE_STATIC);
+
+	prop = RNA_def_property(srna, "sobel_normal_threshold", PROP_FLOAT, PROP_FACTOR);
+	RNA_def_property_float_default(prop, 0.5f);
+	RNA_def_property_ui_text(prop, "Normal Threshold", "Filters out pixels under this level of brightness");
+	RNA_def_property_range(prop, 0.0f, 2.0f);
+	RNA_def_property_override_flag(prop, PROPOVERRIDE_OVERRIDABLE_STATIC);
+
+	prop = RNA_def_property(srna, "sobel_normal_strength", PROP_FLOAT, PROP_FACTOR);
+	RNA_def_property_float_default(prop, 1.0f);
+	RNA_def_property_ui_text(prop, "Normal Strength", "Line strength of normal pass");
+	RNA_def_property_range(prop, 0.0f, 10.0f);
+	RNA_def_property_override_flag(prop, PROPOVERRIDE_OVERRIDABLE_STATIC);
+	
+	prop = RNA_def_property(srna, "sobel_normal_depth_decay", PROP_FLOAT, PROP_FACTOR);
+	RNA_def_property_float_default(prop, 0.03f);
+	RNA_def_property_ui_text(prop, "Normal Depth Decay", "Larger this value, line strength of normal pass weaker as it far");
+	RNA_def_property_range(prop, 0.001f, 1.0f);
+	RNA_def_property_override_flag(prop, PROPOVERRIDE_OVERRIDABLE_STATIC);
+	
+	prop = RNA_def_property(srna, "sobel_depth_threshold", PROP_FLOAT, PROP_FACTOR);
+	RNA_def_property_float_default(prop, 0.5f);
+	RNA_def_property_ui_text(prop, "Depth Threshold", "Filters out pixels under this level of brightness");
+	RNA_def_property_range(prop, 0.0f, 4.0f);
+	RNA_def_property_override_flag(prop, PROPOVERRIDE_OVERRIDABLE_STATIC);
+
+	prop = RNA_def_property(srna, "sobel_depth_strength", PROP_FLOAT, PROP_FACTOR);
+	RNA_def_property_float_default(prop, 1.0f);
+	RNA_def_property_ui_text(prop, "Depth Strength", "Line strength of depth pass");
+	RNA_def_property_range(prop, 0.0f, 1.0f);
+	RNA_def_property_override_flag(prop, PROPOVERRIDE_OVERRIDABLE_STATIC);
+
+	prop = RNA_def_property(srna, "sobel_line_thickness", PROP_FLOAT, PROP_FACTOR);
+	RNA_def_property_float_default(prop, 1.0f);
+	RNA_def_property_ui_text(prop, "Line Thickness", "Line thickness");
+	RNA_def_property_range(prop, 1.0f, 10.0f);
+	RNA_def_property_ui_range(prop, 1.0f, 10.0f, 1, 3);
+	RNA_def_property_override_flag(prop, PROPOVERRIDE_OVERRIDABLE_STATIC);
+
+	prop = RNA_def_property(srna, "sobel_line_color", PROP_FLOAT, PROP_COLOR);
+	RNA_def_property_float_array_default(prop, default_bloom_color);
+	RNA_def_property_array(prop, 3);
+	RNA_def_property_ui_text(prop, "Line Color", "Color applied to the line effect");
+	RNA_def_property_override_flag(prop, PROPOVERRIDE_OVERRIDABLE_STATIC);
+
 	/* Bloom */
 	prop = RNA_def_property(srna, "use_bloom", PROP_BOOLEAN, PROP_NONE);
 	RNA_def_property_boolean_sdna(prop, NULL, "flag", SCE_EEVEE_BLOOM_ENABLED);
